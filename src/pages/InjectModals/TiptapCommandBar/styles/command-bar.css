/* Base Tiptap styles */
.ProseMirror {
  outline: none;
  font-size: 20px !important;
  line-height: 28px !important;
  caret-color: var(--foreground);
  color: var(--foreground);

  /* Ensure that spaces do not cause line breaks */
  white-space: pre-wrap;
  word-wrap: break-word;
  word-break: normal;
}

.ProseMirror:focus {
  outline: none;
}

.ProseMirror p {
  margin: 0;
  line-height: 1.5;
  word-break: break-all;
  overflow-wrap: break-word;
  white-space: pre-wrap;
}

/* Fixed a line feed problem caused by automatically added elements after Token */
.ProseMirror-separator {
  display: none !important;
}

.ProseMirror-trailingBreak {
  display: none;
}

/* Ensure that no extra spaces or newlines appear after TokenNode */
.token-view-wrapper + br,
.token-view-wrapper + img {
  display: none !important;
}

/* Ensure that intra-row nodes in the editor are correctly aligned */
.ProseMirror * {
  vertical-align: baseline;
}

/* Non-break space-related styles to ensure they are displayed correctly */
.ProseMirror .non-breaking-space,
.ProseMirror .nbsp {
  white-space: nowrap;
  display: inline;
}

/* Ensure that all text does not wrap in inappropriate places */
.ProseMirror span,
.ProseMirror a {
  white-space: nowrap;
}

/* Placeholder styles */
.ProseMirror.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: var(--muted-foreground);
  pointer-events: none;
  height: 0;
  font-style: italic;
}

.ProseMirror p.is-editor-empty:first-child::before {
  color: var(--muted-foreground);
  content: 'Type / to start a command...';
  float: left;
  pointer-events: none;
  height: 0;
}

/* Ensure the editor takes up the full available width */
.tiptap-editor-container {
  width: 100%;
}

/* Add some more styling for editor content */
.tiptap-editor h1 {
  font-size: 1.875rem;
  line-height: 2.25rem;
  font-weight: 700;
  margin-top: 1rem;
  margin-bottom: 0.5rem;
}

.tiptap-editor h2 {
  font-size: 1.5rem;
  line-height: 2rem;
  font-weight: 600;
  margin-top: 1rem;
  margin-bottom: 0.5rem;
}

.tiptap-editor h3 {
  font-size: 1.25rem;
  line-height: 1.75rem;
  font-weight: 600;
  margin-top: 1rem;
  margin-bottom: 0.5rem;
}

.tiptap-editor ul {
  list-style-type: disc;
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}

.tiptap-editor ol {
  list-style-type: decimal;
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}

.tiptap-editor blockquote {
  border-left: 4px solid var(--border);
  padding-left: 1rem;
  font-style: italic;
  margin: 0.5rem 0;
}

.tiptap-editor code {
  font-family: monospace;
  background-color: var(--muted);
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
}

.tiptap-editor pre {
  background-color: var(--muted);
  padding: 0.5rem;
  border-radius: 0.375rem;
  overflow-x: auto;
  margin: 0.5rem 0;
}

.tiptap-editor pre code {
  background-color: transparent;
  padding: 0;
}

/* Token Node styles */
.token-view-wrapper {
  display: inline-flex !important;
  align-items: center !important;
  white-space: nowrap !important;
  user-select: all !important;
  cursor: default !important;
  position: relative;
  bottom: 2px;
}

.token-view {
  display: inline-flex !important;
  align-items: center !important;
  background-color: var(--card) !important;
  border-radius: 999px !important;
  height: 28px !important;
  padding: 0 8px !important;
  margin: 0 1px !important;
  gap: 4px !important;
  border: none !important;
}

.token-avatar {
  width: 20px !important;
  height: 20px !important;
}

.token-symbol {
  font-size: 20px !important;
  font-weight: 600;
  color: var(--foreground) !important;
}

/* Suffix hint style */
.suffix-hint {
  color: var(--muted-foreground);
  pointer-events: none !important;
  user-select: none !important;
  display: inline !important;
  font-style: italic !important;
  white-space: normal !important;
  word-break: break-all !important;
  overflow-wrap: anywhere !important;
}

/* Add a pseudo-element to display the hint text */
.suffix-hint::after {
  content: attr(data-text);
}

/* Command highlight styles */
.ProseMirror .command-completed {
  color: var(--primary) !important;
}
